<?xml version="1.0" ?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">



  <xacro:macro name="sim_create_base">

    <gazebo>
      <xacro:arg name="enable_ros_control" default="False"/>

      <!-- Diff-drive controller -->
      <xacro:unless value="$(arg enable_ros_control)">
        <plugin name="differential_drive_controller" filename="libcreate_diff_drive.so">
          <alwaysOn>true</alwaysOn>
          <rosDebugLevel>na</rosDebugLevel>
          <updateRate>40</updateRate>
          <leftJoint>wheel_left_joint</leftJoint>
          <rightJoint>wheel_right_joint</rightJoint>
          <wheelSeparation>${wheel_separation}</wheelSeparation>
          <wheelDiameter>${wheel_radius * 2}</wheelDiameter>
          <wheelTorque>0.5</wheelTorque>
          <wheelAcceleration>0.5</wheelAcceleration>
          <commandTopic>cmd_vel</commandTopic>
          <odometryTopic>odom</odometryTopic>
          <odometryFrame>odom</odometryFrame>
          <robotBaseFrame>base_footprint</robotBaseFrame>
          <publishWheelTF>false</publishWheelTF>
          <publishOdomTF>false</publishOdomTF>
          <publishWheelJointState>true</publishWheelJointState>
          <odometrySource>encoder</odometrySource>
          <publishTf>true</publishTf>
        </plugin>
      </xacro:unless>

      <!-- ros_control plugin -->
      <xacro:if value="$(arg enable_ros_control)">
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>${robot_name}</robotNamespace>
        <robotParam>robot_description</robotParam>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      </plugin>
      </xacro:if>

      <!-- Ground truth -->
      <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>60</updateRate>
        <robotNamespace>${robot_name}</robotNamespace>
        <bodyName>base_link</bodyName>
        <topicName>gts</topicName>
        <gaussianNoise>0</gaussianNoise>
        <frameName>/map</frameName>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
      </plugin>
    </gazebo>

    <!-- Virtual Wall detector -->
    <gazebo>
      <plugin name="virtual_wall_detector" filename="libvirtual_wall_detector.so">
        <updateRate>10</updateRate>
      </plugin>
    </gazebo>

    <!-- Bumpers -->
    <gazebo reference="bumper_link">
      <gravity>true</gravity>
      <self_collide>false</self_collide>
      <maxContacts>10</maxContacts>
      <sensor name='bumper_contact_sensor' type='contact'>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <contact>
          <collision>bumper_link_collision</collision>
        </contact>
        <!-- Plugin -->
        <plugin name="create_bumper_controller" filename="libcreate_bumper_plugin.so">
          <frameName>base_footprint</frameName>
          <robotNamespace>${robot_name}</robotNamespace>
          <topicName>bumper</topicName>
          <updateRate>20</updateRate>
        </plugin>
      </sensor>
    </gazebo>

    <!-- Cliff Publisher detector -->
    <gazebo>
      <plugin name="cliff_msg_publisher" filename="libcliff_msg_publisher.so">
        <frameName>base_footprint</frameName>
        <robotNamespace>${robot_name}</robotNamespace>
        <topicName>cliff</topicName>
        <updateRate>10</updateRate>
      </plugin>
    </gazebo>

	
	<!-- camera追加　ここから-->
	<!-- from http://gazebosim.org/tutorials?tut=ros_gzplugins -->
	<gazebo reference="camera_link">
	  <sensor type="camera" name="camera">
		<update_rate>30.0</update_rate>
		<camera name="head">
		  <horizontal_fov>1.3962634</horizontal_fov>
		  <image>
			<width>800</width>
			<height>600</height>
			<format>R8G8B8</format>
		  </image>
		  <clip>
			<near>0.02</near>
			<far>300</far>
		  </clip>
		  <noise>
			<type>gaussian</type>
			<!-- Noise is sampled independently per pixel on each frame.
				 That pixel's noise value is added to each of its color
				 channels, which at that point lie in the range [0,1]. -->
			<mean>0.0</mean>
			<stddev>0.007</stddev>
		  </noise>
		</camera>
		<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
		  <alwaysOn>true</alwaysOn>
		  <updateRate>0.0</updateRate>
		  <cameraName>/camera</cameraName>
		  <imageTopicName>image_raw</imageTopicName>
		  <cameraInfoTopicName>camera_info</cameraInfoTopicName>
		  <frameName>camera_link</frameName>
		  <hackBaseline>0.07</hackBaseline>
		  <distortionK1>0.0</distortionK1>
		  <distortionK2>0.0</distortionK2>
		  <distortionK3>0.0</distortionK3>
		  <distortionT1>0.0</distortionT1>
		  <distortionT2>0.0</distortionT2>
		</plugin>
	  </sensor>
	</gazebo>
	<!-- camera追加　ここまで-->

	
  </xacro:macro>
</robot>


