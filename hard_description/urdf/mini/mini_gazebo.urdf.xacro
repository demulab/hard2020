<?xml version="1.0"?>

<robot name="mini_sim" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:macro name="mini_sim">
    <gazebo reference="wheel_left_link">
      <mu1>1.0</mu1>
      <mu2>1.0</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>1.0</maxVel>
    </gazebo>

    <gazebo reference="wheel_right_link">
      <mu1>1.0</mu1>
      <mu2>1.0</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>1.0</maxVel>
    </gazebo>
    
    <gazebo reference="caster_front_link">
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>1.0</maxVel>
    </gazebo>
    
    <gazebo reference="caster_back_link">
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>1.0</maxVel>
    </gazebo>
    
    <gazebo reference="base_link">
      <mu1>0.3</mu1>
      <mu2>0.3</mu2>
      <sensor type="contact" name="bumpers">
	<always_on>1</always_on>
	<update_rate>50.0</update_rate>
	<visualize>true</visualize>
	<contact>
	  <collision>base_footprint_collision_base_link</collision>
	</contact>
      </sensor>
    </gazebo>
    
    <gazebo reference="cliff_sensor_left_link">
      <sensor type="ray" name="cliff_sensor_left">
	<always_on>true</always_on>
	<update_rate>50</update_rate>
	<visualize>true</visualize>
	<ray>
	  <scan>
	    <horizontal>
	      <samples>50</samples>
	      <resolution>1.0</resolution>
	      <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
	      <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
	    </horizontal>
<!--            Can't use vertical rays until this bug is resolved: -->
<!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
<!-- 	          <vertical> -->
<!-- 	            <samples>50</samples> -->
<!-- 	            <resolution>1.0</resolution> -->
<!-- 	            <min_angle>-0.0436</min_angle>  -2.5 degree -->
<!-- 	            <max_angle>0.0436</max_angle> 2.5 degree -->
<!-- 	          </vertical> -->
	  </scan>
	  <range>
	    <min>0.01</min>
	    <max>0.15</max>
	    <resolution>1.0</resolution>
	  </range>
	</ray>
      </sensor>
    </gazebo>
	
    <gazebo reference="cliff_sensor_right_link">
      <sensor type="ray" name="cliff_sensor_right">
	<always_on>true</always_on>
	<update_rate>50</update_rate>
	<visualize>true</visualize>
	<ray>
	  <scan>
	    <horizontal>
	      <samples>50</samples>
	      <resolution>1.0</resolution>
	      <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
	      <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
	    </horizontal>
	    <!--            Can't use vertical rays until this bug is resolved: -->
	    <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
	    <!-- 	          <vertical> -->
	    <!-- 	            <samples>50</samples> -->
	    <!-- 	            <resolution>1.0</resolution> -->
	    <!-- 	            <min_angle>-0.0436</min_angle>  -2.5 degree -->
	    <!-- 	            <max_angle>0.0436</max_angle> 2.5 degree -->
	    <!-- 	          </vertical> -->
	  </scan>
	  <range>
	    <min>0.01</min>
	    <max>0.15</max>
	    <resolution>1.0</resolution>
	  </range>
	</ray>
      </sensor>
    </gazebo>
    
    <gazebo reference="cliff_sensor_front_link">
      <sensor type="ray" name="cliff_sensor_front">
	<always_on>true</always_on>
	<update_rate>50</update_rate>
	<visualize>true</visualize>
	<ray>
	  <scan>
	    <horizontal>
	      <samples>50</samples>
	      <resolution>1.0</resolution>
	      <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
	      <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
	    </horizontal>
	    <!-- 	          Can't use vertical rays until this bug is resolved: -->
	    <!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
	    <!-- 	          <vertical> -->
	    <!-- 	            <samples>50</samples> -->
	    <!-- 	            <resolution>1.0</resolution> -->
	    <!-- 	            <min_angle>-0.0436</min_angle>  -2.5 degree -->
	    <!-- 	            <max_angle>0.0436</max_angle> 2.5 degree -->
	    <!-- 	          </vertical> -->
	  </scan>
	  <range>
	    <min>0.01</min>
	    <max>0.15</max>
	    <resolution>1.0</resolution>
	  </range>
	</ray>
      </sensor>
    </gazebo>
    
    <gazebo reference="gyro_link">
      <sensor type="imu" name="imu">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <visualize>false</visualize>
        <imu>
          <noise>
            <type>gaussian</type>
	    <rate>
	      <mean>0.0</mean>
	      <stddev>${0.0014*0.0014}</stddev> <!-- 0.25 x 0.25 (deg/s) -->
	      <bias_mean>0.0</bias_mean>
	      <bias_stddev>0.0</bias_stddev>
	    </rate>
	    <accel> <!-- not used in the plugin and real robot, hence using tutorial values -->
	      <mean>0.0</mean>
	      <stddev>1.7e-2</stddev>
	      <bias_mean>0.1</bias_mean>
	      <bias_stddev>0.001</bias_stddev>
	    </accel>
          </noise>
	</imu>
      </sensor>
    </gazebo>
    

    <gazebo>
      <plugin name="kobuki_controller" filename="libgazebo_ros_kobuki.so">
	<publish_tf>1</publish_tf>
	<left_wheel_joint_name>wheel_left_joint</left_wheel_joint_name>
	<right_wheel_joint_name>wheel_right_joint</right_wheel_joint_name>
	<wheel_separation>.230</wheel_separation>
	<wheel_diameter>0.070</wheel_diameter>
	<torque>1.0</torque>
	<velocity_command_timeout>0.6</velocity_command_timeout>
	<cliff_sensor_left_name>cliff_sensor_left</cliff_sensor_left_name>
	<cliff_sensor_center_name>cliff_sensor_front</cliff_sensor_center_name>
	<cliff_sensor_right_name>cliff_sensor_right</cliff_sensor_right_name>
	<cliff_detection_threshold>0.04</cliff_detection_threshold>
	<bumper_name>bumpers</bumper_name>
        <imu_name>imu</imu_name>
      </plugin>
    </gazebo>

    <!-- lidar hokuyo UTM-30LX -->
    <!-- <xacro:property name="M_PI" value="3.1415926535897931" />
    <xacro:property name="update_rate" value="40" />
    <xacro:property name="ray_count" value="1080" />
    <xacro:property name="min_angle" value="-180" />
    <xacro:property name="max_angle" value="180" /> -->


    <gazebo reference="laser_link">
      <sensor type="ray" name="lidar">
        <always_on>true</always_on>
        <update_rate>40</update_rate>
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>1080</samples>
              <resolution>1</resolution>
              <min_angle>-1.507</min_angle>
              <max_angle>1.507</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.08</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
        <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_laser.so">
          <gaussianNoise>0.005</gaussianNoise>
          <alwaysOn>true</alwaysOn>
          <updateRate>40</updateRate>
          <topicName>scan</topicName>
          <frameName>laser_link</frameName>
        </plugin>
      </sensor>
    </gazebo>


    <!-- xtion -->
    <gazebo reference="head_link">
      <sensor type="depth" name="xtoin">
	<update_rate>20</update_rate>
        <camera>
          <horizontal_fov>${62.8 * M_PI/180.0}</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.5</near>
            <far>9</far>
          </clip>
        </camera>
        <plugin name="$camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>20</updateRate>
          <imageTopicName>camera/rgb/image_raw</imageTopicName>
          <cameraInfoTopicName>camera/rgb/camera_info</cameraInfoTopicName>
          <depthImageTopicName>camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>camera/depth/points</pointCloudTopicName>
          <frameName>camera_depth_optical_frame</frameName>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
        </plugin>
      </sensor>
    </gazebo>

    <!-- ros_control plugin -->
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
	<robotNamespace>/mini</robotNamespace>
	<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      </plugin>
    </gazebo>

    <transmission name="torso_upper_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="torso_upper_joint">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="torso_upper_motor">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

   <transmission name="head_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="head_joint">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="head_motor">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <mechanicalReduction>10</mechanicalReduction>
      </actuator>
   </transmission>

   <transmission name="shoulder_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <joint name="shoulder_joint">
       <hardwareInterface>EffortJointInterface</hardwareInterface>
     </joint>
     <actuator name="shoulder_motor">
       <hardwareInterface>EffortJointInterface</hardwareInterface>
       <mechanicalReduction>10</mechanicalReduction>
     </actuator>
   </transmission>

   <transmission name="wrist_pitch_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <joint name="wrist_pitch_joint">
       <hardwareInterface>EffortJointInterface</hardwareInterface>
     </joint>
     <actuator name="wrist_pitch_motor">
       <hardwareInterface>EffortJointInterface</hardwareInterface>
       <mechanicalReduction>10</mechanicalReduction>
     </actuator>
   </transmission>

   <transmission name="finger_right_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <joint name="finger_right_joint">
       <hardwareInterface>EffortJointInterface</hardwareInterface>
     </joint>
     <actuator name="finger_right_motor">
       <hardwareInterface>EffortJointInterface</hardwareInterface>
       <mechanicalReduction>10</mechanicalReduction>
     </actuator>
   </transmission>

   <transmission name="finger_left_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <joint name="finger_left_joint">
       <hardwareInterface>EffortJointInterface</hardwareInterface>
     </joint>
     <actuator name="finger_left_motor">
       <hardwareInterface>EffortJointInterface</hardwareInterface>
       <mechanicalReduction>10</mechanicalReduction>
     </actuator>
   </transmission>
</xacro:macro>
</robot>
